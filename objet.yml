openapi: 3.0.1
info:
  title: STD21073
  description: First API
  termsOfService: http://swagger.io/terms/
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
- url: https://virtserver.swaggerhub.com/HEIDARIS/std-21069/1.0.0 - SwaggerHub API Auto Mocking
- url: http://STD21073.io/
tags:
- name: Students
- name: Courses

paths:
  /students:
    post:
      tags:
      - Students
      summary: Add a new student
      operationId: Students
      requestBody:
        description: Student object that needs to be added to the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Students'
              
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items :
                  $ref: '#/components/schemas/NewStudents'
        400:
          description: Error
          content: {}
    get:
      tags:
      - Students
      summary: Get a list of students
      operationId: Students
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            format: int32
        - name: page_size
          in: query
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Students'
        400:
          description: Error
          content: {}
  /Students/{id}:       
    get:
      tags:
      - Students
      summary: Get the specified student
      operationId: Students
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/Students'
        400:
          description: Bad Request
          content: {}    
    delete:
      tags:
        - Students
      summary: Delete the specified student
      operationId: deleteStudent
    put:
      tags: 
        - Students

  /courses:
    get:
      tags:
        - Courses
      summary: Get a list of courses
      operationId: getCourses 
    post:
      tags:
        - Courses
      summary: Create new courses
  /courses/{id}:
     get:
      tags:
        - Courses
      summary: Get course number id  
      
components:
  schemas:
    Students:
      type: object
      properties:
        name:
          type: string
        group: 
          type: string
      
    NewStudents:
      type: object
      properties:
        name:
          type: string
        group:
          type: string
          

          
